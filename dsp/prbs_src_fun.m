%function src_i=prbs_src_fun(t_ele, order, time, type, pic, n)
% 
% author: Ainray
% date: 2020/12/13
% bug report: wwzhang0421@163.com
% introduction: generate the m sequence, based on 'prbs_src' function
% There are some differences between prbs_src_fun and prbs_src,
% prbs_src_fun calculated samples based on new input parameter "time",
% which can converted from 'cycle' and 'fs' used in prbs_src; of course,
% you can customely define 'time' by yourself.
% Why we need prbs_src_fun? which is useful for generated function handle for
% contiouse usage.
% 
%    input:
%          t_ele, reciprocal of source current switching frequecny
%          order, the order of m sequence, i.e. the number of shift registers
%           time, time
%           type, 0, the PRBS source is loaded from file 'prbs4_18.mat'
%                 otherwise, the PRBS source is generated by calling Matlab built-in function: idinput
%                 a positive value can shift m-series to left cyclely
%            pic, whether plot the source or not
%              n, the sampling number to be plotted
%   output:
%          src_i, the m sequence with bipolor amplitude of I

function src_i =prbs_src_fun(t_ele, order, time, type, pic, n)
%     narginchk(3,6); %check the input arguments
    if nargin<4
        type=-1;
    end
    if nargin<5
        type=-1;
        pic=0;    	% no ploting
    end
    
    % generate basic prbs 
    num_ele=2^order-1;                   % the number of elements of one period

    if(type>num_ele)
        type=num_ele;
    end
    
    if(type<0)
        type=num_ele;
    end
    
    if (type==0)  % mode  
        m_series=prbs_(order);  % from generated file
        m_series(m_series==0)=-1;
    else
         m_series=idinput(num_ele,'prbs');    % m sequence
         m_series=[m_series(type+1:num_ele);m_series(1:type)];
    end
    
    % sampling
    periodtime = t_ele * num_ele;
    
    indexofperiod = floor(time / periodtime) + 1; % period index
    timeinlastperiod = time - floor(time/periodtime) * periodtime;
    indexofelement = floor(timeinlastperiod/t_ele) + 1;
     
    index = (indexofperiod-1)*num_ele + indexofelement; % element index globally
   
    % periodic extension
    tmp=repmat(m_series,indexofperiod(end),1);
    m_series=tmp(1:index(end));
    npe = histgi(index);
    src_i = rude(npe, m_series);
    
    if(pic~=0)
        figure;
        if nargin<6
            n=length(src_i);
        end
        plot_(src_i,time, n);
    end
end
function plot_(src_i,t, n)
        narginchk(2,3); %check the input arguments
        if nargin==2
            n=length(src_i);
        end
        plot(t(1:n),src_i,'r.');
        hold on;
        plot(t(1:n), src_i(1:n));
        axis([0,t(end)*1.1,min(src_i)*1.1,max(src_i)*1.1]);
        xlabel('time/s');ylabel('current/A');
        axis([0,t(end),1.1*min(src_i),max(src_i)*1.1]);
end

function m_series=prbs_(order)
if(order<4 ||order>18)
    error('Order must be from 4 to 18(included)');
end
    load prbs4_18.mat;
    switch(order)
    case 4
        m_series=prbs4;
    case 5
        m_series=prbs5;
    case 6
         m_series=prbs6;
    case 7
         m_series=prbs7;
    case 8
         m_series=prbs8;
    case 9
         m_series=prbs9;
    case 10
         m_series=prbs10;
    case 11
         m_series=prbs11;
    case 12
         m_series=prbs12;
    case 13
         m_series=prbs13;
    case 14
         m_series=prbs14;
    case 15
         m_series=prbs15;
    case 16
         m_series=prbs16;
    case 17
         m_series=prbs17;
    case 18
         m_series=prbs18;
    end
end
        
        

  